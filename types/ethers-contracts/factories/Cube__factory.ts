/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Cube, CubeInterface } from "../Cube";
import type { NonPayableOverrides } from "../common";
import {
  Contract,
  ContractDeployTransaction,
  ContractFactory,
  ContractRunner,
  ContractTransactionResponse,
  Interface,
  Signer,
} from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress_",
        type: "address",
      },
    ],
    name: "getCube",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "prizeId",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "positionX",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "positionY",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "positionZ",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationX",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationY",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationZ",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "set",
            type: "bool",
          },
        ],
        internalType: "struct ICube.CubeObj[10][10]",
        name: "cube",
        type: "tuple[10][10]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "x_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z_",
        type: "uint256",
      },
    ],
    name: "getCubeObj",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "prizeId",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "positionX",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "positionY",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "positionZ",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationX",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationY",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationZ",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "set",
            type: "bool",
          },
        ],
        internalType: "struct ICube.CubeObj",
        name: "cubeObj",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prizePoapAddress_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prizePoap",
    outputs: [
      {
        internalType: "contract IPrizePoap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "prizeId",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "positionX",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "positionY",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "positionZ",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationX",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationY",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationZ",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "set",
            type: "bool",
          },
        ],
        internalType: "struct ICube.CubeObj[]",
        name: "cubeObjList_",
        type: "tuple[]",
      },
    ],
    name: "setBatchCubeObj",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "prizeId",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "positionX",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "positionY",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "positionZ",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationX",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationY",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rotationZ",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "set",
            type: "bool",
          },
        ],
        internalType: "struct ICube.CubeObj",
        name: "cubeObj_",
        type: "tuple",
      },
    ],
    name: "setCubeObj",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newState_",
        type: "address",
      },
    ],
    name: "setPrizePoap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611a4061011960003960008181610293015281816102dc0152818161037b015281816103bb015261044e0152611a406000f3fe6080604052600436106100c25760003560e01c80638cb353681161007f578063b7184a1e11610059578063b7184a1e146101fc578063c4d66de81461021c578063f2fde38b1461023c578063f36091571461025c57600080fd5b80638cb353681461019e5780638da5cb5b146101be5780639e64bffb146101dc57600080fd5b80633659cfe6146100c75780633eea270c146100e95780634f1ef2861461012657806352d1902d146101395780636e3a6e6b1461015c578063715018a614610189575b600080fd5b3480156100d357600080fd5b506100e76100e23660046113f5565b610289565b005b3480156100f557600080fd5b5060c954610109906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e7610134366004611481565b610371565b34801561014557600080fd5b5061014e610441565b60405190815260200161011d565b34801561016857600080fd5b5061017c6101773660046113f5565b6104f4565b60405161011d9190611592565b34801561019557600080fd5b506100e7610601565b3480156101aa57600080fd5b506100e76101b93660046116d2565b610615565b3480156101ca57600080fd5b506033546001600160a01b0316610109565b3480156101e857600080fd5b506100e76101f73660046116ef565b610b60565b34801561020857600080fd5b506100e76102173660046113f5565b610ba0565b34801561022857600080fd5b506100e76102373660046113f5565b610bca565b34801561024857600080fd5b506100e76102573660046113f5565b610cfe565b34801561026857600080fd5b5061027c6102773660046117a3565b610d74565b60405161011d91906117d6565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102da5760405162461bcd60e51b81526004016102d1906117e5565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103236000805160206119c4833981519152546001600160a01b031690565b6001600160a01b0316146103495760405162461bcd60e51b81526004016102d190611831565b61035281610e48565b6040805160008082526020820190925261036e91839190610e50565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103b95760405162461bcd60e51b81526004016102d1906117e5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104026000805160206119c4833981519152546001600160a01b031690565b6001600160a01b0316146104285760405162461bcd60e51b81526004016102d190611831565b61043182610e48565b61043d82826001610e50565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e15760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016102d1565b506000805160206119c483398151915290565b6104fc611339565b6001600160a01b038216600090815260ca6020526040808220815161014081019092529091600a90835b828210156105f657604080516101408101909152600a8084028601906000835b828210156105e35760408051610100810182528386015463ffffffff8116825261ffff64010000000082048116602080850191909152600160301b8304821694840194909452600160401b820481166060840152600160501b820481166080840152600160601b8204811660a0840152600160701b82041660c083015260ff600160801b90910416151560e0820152825260019092019101610546565b5050505081526020019060010190610526565b505050509050919050565b610609610fc0565b610613600061101a565b565b80600a816020015161ffff161080156106365750600a816040015161ffff16105b801561064a5750600a816060015161ffff16105b6106a55760405162461bcd60e51b815260206004820152602660248201527f636865636b437562654f626a3a204f7574206f662072616e676520706f73697460448201526534b7b72c2cad60d11b60648201526084016102d1565b610168816080015161ffff16111580156106c957506101688160a0015161ffff1611155b80156106df57506101688160c0015161ffff1611155b61073a5760405162461bcd60e51b815260206004820152602660248201527f636865636b437562654f626a3a204f7574206f662072616e676520726f74617460448201526534b7b72c2cad60d11b60648201526084016102d1565b6020828101516060840151845133600090815260ca9094526040842061ffff938416949390921692909183600a81106107755761077561187d565b600a020184600a811061078a5761078a61187d565b015460e087015163ffffffff90911691506108b55733600090815260ca6020526040902083600a81106107bf576107bf61187d565b600a020184600a81106107d4576107d461187d565b0154600160801b900460ff1661082c5760405162461bcd60e51b815260206004820152601860248201527f736574437562654f626a3a204e6f7420796574207365742e000000000000000060448201526064016102d1565b33600090815260cb6020908152604080832063ffffffff851684529091528120805491610858836118a9565b909155505033600090815260ca6020526040902083600a811061087d5761087d61187d565b600a020184600a81106108925761089261187d565b01805470ffffffffffffffffffffffffffffffffff191690555061043d92505050565b33600081815260cb6020908152604080832063ffffffff871680855292528083205460c9549151627eeac760e11b815260048101959095526024850192909252919290916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094c91906118c0565b61095691906118d9565b116109965760405162461bcd60e51b815260206004820152601060248201526f6c61636b206f66207072697a654e756d60801b60448201526064016102d1565b33600090815260ca6020526040902083600a81106109b6576109b661187d565b600a020184600a81106109cb576109cb61187d565b0154600160801b900460ff1615610a0e5733600090815260cb6020908152604080832063ffffffff851684529091528120805491610a08836118a9565b91905055505b33600090815260cb6020908152604080832063ffffffff861684529091528120805491610a3a836118ec565b909155505033600090815260ca60205260409020869084600a8110610a6157610a6161187d565b600a020185600a8110610a7657610a7661187d565b825191018054602084015160408501516060860151608087015160a088015160c089015160e09099015163ffffffff90981665ffffffffffff199096169590951764010000000061ffff958616021769ffffffff0000000000001916600160301b9385169390930269ffff0000000000000000191692909217600160401b918416919091021763ffffffff60501b1916600160501b9183169190910261ffff60601b191617600160601b928216929092029190911762ffffff60701b1916600160701b919094160260ff60801b191692909217600160801b91151591909102179055505050505050565b60005b815181101561043d57610b8e828281518110610b8157610b8161187d565b6020026020010151610615565b80610b98816118ec565b915050610b63565b610ba8610fc0565b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff1615808015610bea5750600054600160ff909116105b80610c045750303b158015610c04575060005460ff166001145b610c675760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102d1565b6000805460ff191660011790558015610c8a576000805461ff0019166101001790555b610c9261106c565b610c9a61109b565b60c980546001600160a01b0319166001600160a01b038416179055801561043d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b610d06610fc0565b6001600160a01b038116610d6b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d1565b61036e8161101a565b610d7c611367565b6001600160a01b038416600090815260ca6020526040902082600a8110610da557610da561187d565b600a020183600a8110610dba57610dba61187d565b6040805161010081018252929091015463ffffffff8116835261ffff640100000000820481166020850152600160301b8204811692840192909252600160401b810482166060840152600160501b810482166080840152600160601b8104821660a0840152600160701b810490911660c083015260ff600160801b90910416151560e0820152949350505050565b61036e610fc0565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e8857610e83836110c2565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ee2575060408051601f3d908101601f19168201909252610edf918101906118c0565b60015b610f455760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016102d1565b6000805160206119c48339815191528114610fb45760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016102d1565b50610e8383838361115e565b6033546001600160a01b031633146106135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166110935760405162461bcd60e51b81526004016102d190611905565b610613611189565b600054610100900460ff166106135760405162461bcd60e51b81526004016102d190611905565b6001600160a01b0381163b61112f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102d1565b6000805160206119c483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611167836111b9565b6000825111806111745750805b15610e835761118383836111f9565b50505050565b600054610100900460ff166111b05760405162461bcd60e51b81526004016102d190611905565b6106133361101a565b6111c2816110c2565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6112615760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102d1565b600080846001600160a01b03168460405161127c9190611974565b600060405180830381855af49150503d80600081146112b7576040519150601f19603f3d011682016040523d82523d6000602084013e6112bc565b606091505b50915091506112e482826040518060600160405280602781526020016119e4602791396112ef565b925050505b92915050565b606083156112fe575081611308565b611308838361130f565b9392505050565b81511561131f5781518083602001fd5b8060405162461bcd60e51b81526004016102d19190611990565b604051806101400160405280600a905b6113516113ab565b8152602001906001900390816113495790505090565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b604051806101400160405280600a905b6113c3611367565b8152602001906001900390816113bb5790505090565b80356001600160a01b03811681146113f057600080fd5b919050565b60006020828403121561140757600080fd5b611308826113d9565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561144a5761144a611410565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561147957611479611410565b604052919050565b6000806040838503121561149457600080fd5b61149d836113d9565b915060208084013567ffffffffffffffff808211156114bb57600080fd5b818601915086601f8301126114cf57600080fd5b8135818111156114e1576114e1611410565b6114f3601f8201601f19168501611450565b9150808252878482850101111561150957600080fd5b80848401858401376000848284010152508093505050509250929050565b63ffffffff8151168252602081015161ffff80821660208501528060408401511660408501528060608401511660608501528060808401511660808501528060a08401511660a08501528060c08401511660c0850152505060e0810151610e8360e084018215159052565b616400810181836000805b600a8082106115ac57506115f6565b835185845b838110156115db576115c4828451611527565b6020929092019161010091909101906001016115b1565b505050610a009490940193506020929092019160010161159d565b5050505092915050565b803561ffff811681146113f057600080fd5b803580151581146113f057600080fd5b6000610100828403121561163557600080fd5b61163d611426565b9050813563ffffffff8116811461165357600080fd5b815261166160208301611600565b602082015261167260408301611600565b604082015261168360608301611600565b606082015261169460808301611600565b60808201526116a560a08301611600565b60a08201526116b660c08301611600565b60c08201526116c760e08301611612565b60e082015292915050565b600061010082840312156116e557600080fd5b6113088383611622565b6000602080838503121561170257600080fd5b823567ffffffffffffffff8082111561171a57600080fd5b818501915085601f83011261172e57600080fd5b81358181111561174057611740611410565b61174e848260051b01611450565b818152848101925060089190911b83018401908782111561176e57600080fd5b928401925b81841015611798576117858885611622565b8352848301925061010084019350611773565b979650505050505050565b6000806000606084860312156117b857600080fd5b6117c1846113d9565b95602085013595506040909401359392505050565b61010081016112e98284611527565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816118b8576118b8611893565b506000190190565b6000602082840312156118d257600080fd5b5051919050565b818103818111156112e9576112e9611893565b6000600182016118fe576118fe611893565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b8381101561196b578181015183820152602001611953565b50506000910152565b60008251611986818460208701611950565b9190910192915050565b60208152600082518060208401526119af816040850160208701611950565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a1aca2519ff7f307399fb7edc8abb3666a8aa9b94cd48a2d5ca44aaff0d2021064736f6c63430008120033";

type CubeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CubeConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cube__factory extends ContractFactory {
  constructor(...args: CubeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Cube & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Cube__factory {
    return super.connect(runner) as Cube__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CubeInterface {
    return new Interface(_abi) as CubeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Cube {
    return new Contract(address, _abi, runner) as unknown as Cube;
  }
}
